% M文件是将命令集中在一起的脚本文件
%  分为普通脚本文件和函数脚本文件
%    普通脚本文件：没有参数输入，也不返回参数
%    函数脚本文件：可以输入参数和返回参数
%  本文件为普通脚本遵照固定格式，先清空工作区，后运行脚本命令
clear % 清除工作区命令
%% 创建数组
x = [1 2 3 4];         % 1     2     3     4
a = 10 :15;            % 10    11    12    13    14    15
b = 1:2:9  ;           % 1     3     5     7     9
c = linspace(1,15,3);  % 1     8    15
d = logspace(1,20,5);  % 10 562341.325190349 31622776601.6838 1.77827941003892e+15 1.00000000000000e+20
% x是用最基本的逐一赋值法来定义数组
% a,b是利用算式定义数组，冒号式两端代表数组的初值和末值，中间是递增的值，默认为+1
% c,d是利用函数来定义数组，linspace()是线性间隔，取1~15之间固定间隔的三个数，logspace()是对数间隔，取lg10000000000~lg100000000000000000000之间等间隔的5个数
%% 数组的装载
save array x a b c d;  % 将数组存储在“array.mat”的文件中
clear;
load array;            % 将文件“array.mat”中的变量装入工作区
% 存储和装载对于同名文件，工作区中同名变量采用覆盖的方法
%% 数组寻址与赋值
x(2);                   % 2
x(1:2:3);               % 1     3
a(3:end);               % 12    13    14    15
b(find(b>3));           % 5     7     9
% 数组的索引由1开始
% matlab会自动寻址产生的值，存到新的数组“ans”中，依次覆盖
x(2)=10;                % 1    10     3     4
%% 数组的排序及维数
sort(x);                % 1     3     4    10
sort(x,'ascend');       % 1     3     4    10
sort(x,'descend');      %10     4     3     1
% matlab会将排序后的数组，自动存入"ans"中，覆盖其值
% sort()函数用于数组排序，默认各值升序排列，'descend'可调整为降序
l = length(a);          % 6
% length()函数可以返回一维数组的长度
%% 数组运算
% 数与数组的运算
a = a+l;        %16    17    18    19    20    21
b = b-l;        %-5    -3    -1     1     3
c = c.*l;       % 6    48    90
c = c./l;       % 1     8    15
a = a.\l;       % 0.3750    0.3529    0.3333    0.3158    0.3000    0.2857
a = a.^l;       % 0.0028    0.0019    0.0014    0.0010    0.0007    0.0005
c = l.^c;       % 6  1679616  470184984576.000
% 数组与数组运算
% 只有维数和长度相同的数组可以运算
y = ans+x;      %11    14     6     5
y = ans.*x;     %10    40     9     4
y = y./x;       %10     4     3     1
y = 2.* y;
y = ans.\y;     % 2     2     2     2
y = x.^ans;     % 1       10000          27           4
% ./是前除后，.\是后除前
%  常用函数
min(y);         % 1 %最小值
max(y);         % 10000 %最大值
mean(x);        % 4.5000 %平均值
median(y);      % 15.5000 %中位数
diff(x);        %  9    -7     1 % 相邻元素差，后减前
size(x);        % 1     4  % 尺寸 1行4列
sum(x);         % 18 % 元素和
cumprod(x);     % 1    10    30   120 % 至当前元素累积乘积
dot(x,x);       % 126 % 求内积，长度必须相等
cumsum(x);      % 1    11    14    18 % 至当前元素累积和
cross([1,2,3],[4,5,6]);     %   -3     6    -3 % 求外积，长度必须为3
range(y);       % 999 % 求极差
%%
save array a b c d l x y;